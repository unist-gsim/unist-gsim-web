{
  "title": "Plant",
  "src": "from cs1robots import *\n\nload_world('worlds/harvest3.wld')\n\nbot = Robot()\nbot.set_trace('blue')\nbot.set_pause(0.3)\n",
  "files": {
    ".grader.py": {
      "type": "text",
      "body": "import re\nfrom gradepad import StdoutCollector, Grader\nimport cs1robots\n\nbeepers_dict = {'6,2': 1, '2,0': 1, '5,5': 1, '4,1': 1, '2,2': 1, '4,5': 1, '5,2': 1, '6,4': 1, '2,1': 1, '1,5': 1, '1,0': 1, '5,1': 1, '4,0': 1, '1,4': 1, '6,1': 1, '6,5': 1, '3,3': 1, '2,5': 1, '1,1': 1, '2,4': 1, '3,0': 1, '5,3': 1, '4,3': 1, '6,0': 1, '3,4': 1, '4,4': 1, '1,2': 1, '3,1': 1, '5,4': 1, '4,2': 1, '3,5': 1, '2,3': 1, '5,0': 1, '6,3': 1, '3,2': 1, '1,3': 1}\n\ndef grade(grader):\n    cs1robots.load_world('harvest3')\n    cs1robots.helper.lock_world()\n    collector = StdoutCollector()\n    with collector:\n        import main\n    \n    test1 = grader.test('A robot exists.', 'Please make one robot. No more, no less. Try \"bot = Robot()\"?')\n    test2 = grader.test('Beepers are planted in the empty spots as the image shows above.', 'Please drop beepers in the empty spots of the 6Ã—6 field.')\n    \n    robots = cs1robots.helper.get_all_robots()\n    test1.expect(len(robots) == 1)\n    test2.expect(cs1robots.helper.get_all_beepers_dict() == beepers_dict)\n    \ngrader = Grader(locale='en')\ngrader.run(grade)"
    },
    "worlds/": {
      "type": "dir",
      "body": ""
    },
    "worlds/harvest3.wld": {
      "type": "text",
      "body": "avenues = 7\nstreets = 7\nrobot = (1, 1, 'E', 0)\nwalls = []\nbeepers = {\n    (7, 3): 1, \n    (6, 6): 1, \n    (5, 6): 1, \n    (3, 2): 1, \n    (2, 1): 1, \n    (6, 2): 1, \n    (5, 1): 1, \n    (2, 5): 1, \n    (7, 2): 1, \n    (7, 6): 1, \n    (4, 4): 1, \n    (3, 6): 1, \n    (2, 2): 1, \n    (3, 5): 1, \n    (4, 1): 1, \n    (6, 4): 1, \n    (5, 4): 1, \n    (7, 1): 1, \n    (4, 5): 1, \n    (5, 5): 1, \n    (2, 3): 1, \n    (4, 2): 1, \n    (6, 5): 1, \n    (5, 3): 1, \n    (4, 6): 1, \n    (3, 4): 1, \n    (6, 1): 1, \n    (7, 4): 1, \n    (4, 3): 1, \n    (2, 4): 1\n}"
    }
  }
}